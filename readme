a distributed in memory key-value store, dynamically add/remove server, support multiple users

precondition/assumption:
both servers and proxy are fault-tolerance, proxy is consistence while server could shutdown correctly
all requests are handled probably


support:
multiple users, each client has an id which is stored with data in server
dynamically add/remove servers (works but not efficient)

doesn't implement, but could:
encryption
if a server is full, reassign its add request to other server
generate id for client

flaws:
if a new server is added, all other server will calculate all data to transfer to this new server

problems may occur:
boot/ shutdown several servers at the same time.
handling requests when transferring data to/from other servers


dynamically add/remove servers
proxy maintains a server list, which includes address and server id (assigned when first connect to server),
and maintains a heartbeat to each server periodically

server has 5 states
    1: onboot, getting data from other servers
    2: normal, could handle requests from proxy
    3: full,
    4: onshut, sending data to other servers
    9: fault

if a server is connected to proxy, it would get the first unused id (that is, if id of server list is continuous,
it would get the next number, and this could cause the worst condition, the flaw, if there exists some blank id,
new server would get the minimal blank id, and other server would transfer corresponding data to this server).
if a server shuts down, this server would transfer its data to other servers and the server list would leave the blank.

if new requests comes, proxy would first hash keys to find corresponding servers. if corresponding server doesn't exist,
it would hash the result of first hash value (before mod calculation) to find new server (could do this recursively,
but for convenience, after second hash, it will find the next available server instead).

when new server booting up, it would acquire corresponding data from other servers, while the proxy would still reassign
requests to those servers. when shutting down, it would sending data to corresponding servers and the proxy would still
reassign requests to this server.

other solutions that may work, but i didn't think about the details:
1. set a limitation of servers that proxy could connect to, e.g. 10, every time the proxy mods hash value by that number
each server stores the final hash value with data
    1 server condition, store[n in 0:9]
    2 servers condition, server0 transfers second half to server1
    3 servers condition, both server0 and server1 transfer 1/3 data to server2
    ...

2. more complex hash function
